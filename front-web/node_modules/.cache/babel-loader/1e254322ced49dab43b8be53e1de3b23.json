{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\TEMP\\\\ws-sds2\\\\dsdeliver\\\\front-web\\\\src\\\\Orders\\\\OrderLocation.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport AsyncSelect from 'react-select/async';\nimport { fetchLocalMapBox } from '../api';\nconst initialPosition = {\n  lat: -23.6482332,\n  lng: -46.5724934\n};\n\nfunction OrderLocation() {\n  _s();\n\n  const [address, setAddress] = useState({\n    position: initialPosition\n  });\n\n  const loadOptions = async (inputValue, callback) => {\n    const response = await fetchLocalMapBox(inputValue);\n    const places = response.data.features.map(item => {\n      return {\n        label: item.place_name,\n        value: item.place_name,\n        position: {\n          lat: item.center[1],\n          lng: item.center[0]\n        }\n      };\n    });\n    callback(places);\n  };\n\n  const handleChangeSelect = place => {\n    setAddress(place); //onChangeLocation({\n    //latitude: place.position.lat,\n    //longitude: place.position.lng,\n    //address: place.label!\n    //});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"order-location-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-location-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"order-location-title\",\n        children: \"Selecione onde o pedido deve ser entregue:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-container\",\n        children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n          placeholder: \"Digite um endere\\xE7o para entregar o pedido\",\n          className: \"filter\",\n          loadOptions: loadOptions,\n          onChange: value => handleChangeSelect(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: address.position,\n        zoom: 15,\n        scrollWheelZoom: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: address.position,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Meu marcador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, address.position.lat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderLocation, \"MU74IGGtBr1MuSbYKCJfs2IsLdk=\");\n\n_c = OrderLocation;\nexport default OrderLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderLocation\");","map":{"version":3,"sources":["C:/TEMP/ws-sds2/dsdeliver/front-web/src/Orders/OrderLocation.tsx"],"names":["useState","MapContainer","TileLayer","Marker","Popup","AsyncSelect","fetchLocalMapBox","initialPosition","lat","lng","OrderLocation","address","setAddress","position","loadOptions","inputValue","callback","response","places","data","features","map","item","label","place_name","value","center","handleChangeSelect","place"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAGA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,GAAG,EAAE,CAAC,UADc;AAEpBC,EAAAA,GAAG,EAAE,CAAC;AAFc,CAAxB;;AAcA,SAASC,aAAT,GAAyB;AAAA;;AAEzB,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAS;AAC9Ca,IAAAA,QAAQ,EAAEN;AADoC,GAAT,CAArC;;AAII,QAAMO,WAAW,GAAG,OAAOC,UAAP,EAA2BC,QAA3B,KAAmE;AACnF,UAAMC,QAAQ,GAAG,MAAMX,gBAAgB,CAACS,UAAD,CAAvC;AAEA,UAAMG,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuBC,GAAvB,CAA4BC,IAAD,IAAe;AACvD,aAAQ;AACNC,QAAAA,KAAK,EAAED,IAAI,CAACE,UADN;AAENC,QAAAA,KAAK,EAAEH,IAAI,CAACE,UAFN;AAGNX,QAAAA,QAAQ,EAAE;AACRL,UAAAA,GAAG,EAAEc,IAAI,CAACI,MAAL,CAAY,CAAZ,CADG;AAERjB,UAAAA,GAAG,EAAEa,IAAI,CAACI,MAAL,CAAY,CAAZ;AAFG;AAHJ,OAAR;AAQD,KATc,CAAf;AAWAV,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACD,GAfH;;AAiBE,QAAMS,kBAAkB,GAAIC,KAAD,IAAkB;AAC3ChB,IAAAA,UAAU,CAACgB,KAAD,CAAV,CAD2C,CAE3C;AACE;AACA;AACA;AACF;AACD,GAPD;;AAUF,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACA,QAAC,WAAD;AACA,UAAA,WAAW,EAAC,8CADZ;AAEA,UAAA,SAAS,EAAC,QAFV;AAGA,UAAA,WAAW,EAAEd,WAHb;AAIA,UAAA,QAAQ,EAAIW,KAAK,IAAIE,kBAAkB,CAACF,KAAD;AAJvC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAaI,QAAC,YAAD;AACA,QAAA,MAAM,EAAEd,OAAO,CAACE,QADhB;AAEA,QAAA,IAAI,EAAE,EAFN;AAIA,QAAA,eAAe,MAJf;AAAA,gCAKI,QAAC,SAAD;AACI,UAAA,WAAW,EAAC,0EADhB;AAEI,UAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEF,OAAO,CAACE,QAA1B;AAAA,iCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA,SAGKF,OAAO,CAACE,QAAR,CAAiBL,GAHtB;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAnEQE,a;;KAAAA,a;AAqET,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { fetchLocalMapBox } from '../api';\r\n\r\n\r\nconst initialPosition = {\r\n    lat: -23.6482332,\r\n    lng: -46.5724934\r\n}\r\n\r\ntype Place ={\r\n    label?: string;\r\n    value?: string;\r\n    position: {\r\n        lat: number;\r\n        lng: number;\r\n    };\r\n}\r\n\r\nfunction OrderLocation() {\r\n    \r\nconst[address, setAddress] = useState<Place> ({\r\nposition: initialPosition\r\n});\r\n\r\n    const loadOptions = async (inputValue: string, callback: (places: Place[]) => void) => {\r\n        const response = await fetchLocalMapBox(inputValue);\r\n      \r\n        const places = response.data.features.map((item: any) => {\r\n          return ({\r\n            label: item.place_name,\r\n            value: item.place_name,\r\n            position: {\r\n              lat: item.center[1],\r\n              lng: item.center[0]\r\n            },\r\n          });\r\n        });\r\n      \r\n        callback(places);\r\n      };\r\n      \r\n      const handleChangeSelect = (place: Place) => {\r\n        setAddress(place);\r\n        //onChangeLocation({\r\n          //latitude: place.position.lat,\r\n          //longitude: place.position.lng,\r\n          //address: place.label!\r\n        //});\r\n      };\r\n    \r\n    \r\n    return (\r\n        <div className=\"order-location-container\">\r\n            <div className=\"order-location-content\">\r\n                <h3 className=\"order-location-title\">\r\n                    Selecione onde o pedido deve ser entregue:\r\n    </h3>\r\n                <div className=\"filter-container\">\r\n                <AsyncSelect\r\n                placeholder=\"Digite um endereÃ§o para entregar o pedido\"\r\n                className=\"filter\"\r\n                loadOptions={loadOptions}\r\n                onChange = {value => handleChangeSelect(value as Place)}\r\n                />\r\n                </div>\r\n\r\n                <MapContainer \r\n                center={address.position} \r\n                zoom={15}\r\n                key={address.position.lat}\r\n                scrollWheelZoom>\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <Marker position={address.position}>\r\n                        <Popup>\r\n                            Meu marcador\r\n                    </Popup>\r\n                    </Marker>\r\n                </MapContainer>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderLocation;"]},"metadata":{},"sourceType":"module"}